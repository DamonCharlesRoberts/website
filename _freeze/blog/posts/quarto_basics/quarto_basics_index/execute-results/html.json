{
  "hash": "8988f60397294589cc92fda04bd2873e",
  "result": {
    "markdown": "---\ntitle: \"Quarto Basics\"\nauthor: \"Damon C. Roberts\"\ndate: \"10/13/2022\"\ncategories:\n    - technical\n    - quarto\ndraft: false\nengine: rmarkdown\nexecute:\n    message: false\n    warning: false\nimage: ../../imgs/chalkboard.jpg\n---\n\n\nQuarto is an excellent expansion upon RMarkdown. For those that have not had experience with either, it might be a little overwhelming. However, I hope to make the case in this post for why Quarto is worth learning and is particularly useful for increasing the replicability of your academic projects (or for various projects that you have if you are an analyst!).\n\nImagine you are able to write your R (or python) script, execute the code to make the tables and figures presenting the results of your analyses *but* you can also do your write up of the analysis all in the same document. If you've ever used a Jupyter notebook, it is kind of the same idea. What RMarkdown and Quarto add are that you are able to compile this document into a PDF document, presentation, or even in a blog post! With Quarto in particular, each of these outputs are **extremely** customizable and aren't all too painful^[Term used loosely here.] to put together and to look really nice. \n\nAs there are tons of options about what you can do with Quarto, this also means that it can appear rather daunting to get started with it. There is a wonderful community that offers great resources for how to get started, however, I thought I might put down my thoughts about it in the hope that this may be useful to someone who may be a bit overwhelmed getting started.\n\n# Getting Quarto set up\n\nThe first thing you should do is make sure that RStudio and R are both up-to-date. You can download the latest version of [RStudio here](https://www.rstudio.com/products/rstudio/download/) and can download the latest version of [R here](https://cran.r-project.org/).\n\n:::{.callout-note}\nIf you use R with VSCode or some other IDE, you can use Quarto still! I use VSCode and there is a great [extension for Quarto on VSCode](https://marketplace.visualstudio.com/items?itemName=quarto.quarto) that you can use!\n:::\n\nThe next thing you'll need to do is to install Quarto itself. You can do so by going to [Quarto's Get Started page](https://quarto.org/docs/get-started/). Once you've downloaded Quarto, make sure to open up your IDE - either RStudio or whichever other IDE you use - and enter into your terminal:\n\n```{.bash filename=\"Terminal\"}\nquarto install tools tinytex\n```\n\nYou'll need to install tinytex if you are wanting to compile any of your Quarto documents into a PDF. The reason you are doing this is that Quarto takes all of your code and the stuff you wrote around it, executes the code, temporarily stores the tables and figures and places them in a $\\LaTeX$ document, and then compiles it. $\\verb|tinytex|$ is a low-overhead TeX distribution that installs the packages, on-demand, it needs to compile the document into a PDF document.\n\nIf you are on a Windows machine, you may need to add $\\verb|.cmd|$ to your quarto command. I.e.,\n\n```{.bash filename=\"Terminal\"}\nquarto.cmd install tools tinytex\n```\n\nOnce you've completed this step, restart your IDE. \n\nNow you are ready to start writing some documents. Let's go through some examples for a presentation and for a manuscript (or report) you might be writing.\n\n## Writing a manuscript with Quarto\n\nIf you are an academic, you are probably familiar with the $\\LaTeX$ *versus* Word debate. Well, it appears that there is a challenger! You can create a PDF document that has all the wonderful signal-boosting of a $\\LaTeX$-looking PDF document, without having to deal with Overleaf or some distribution to compile it locally. \n\nThe other benefit is that as you are writing both your R code and your manuscript in the same document, you are helping with making sure that your paper is extremely replicable! They not only are able to replicate your tables and figures, but also the manuscript itself! Awesome!\n\nSo, let's start with the basics. The first thing that you need to do is specify your YAML section. With a PDF document, it'll look something like this:\n\n```{.yaml}\n---\ntitle: \"Title of research project\"\nauthor: \n    - Author 1\n    - Author 2\n    - Author 3\nabstract: |\n    The text of the abstract goes here. I put the horizontal line above so that I can then just write the body of the abstract on the next line like so.\nformat:\n    pdf:\n        documentclass: article\n        self-contained: true\nbibliography: project_bibliography_file.bib\nexecute:\n    echo: false\n    warnings: false\n    messages: false\n---\n```\n\nLet's break this down:\n\n- We are first going to provide some information about the title of the paper, the authors (we can list multiple), and the abstract. \n\n- Next I am going to provide some information about the format of the output. Since Quarto can create a bunch of different types of files, we should specify that the output we want is going to be a pdf document. \n\n- We are then going to specify some options for the pdf document by telling it that the $\\verb|documentclass|$ will be an article so that it kind of looks like a basic manuscript draft. I am also going to specify that I want it all to be self-contained so that, so long as the document compiles correctly, all the intermediary files it creates will be deleted and just leave me with my original .qmd file and my output, .pdf, file. \n\n- I am also going to specify the bibtex file that I am using for my references. \n\n:::{.callout-note}\nIf you use a citation manager like Zotero, you can export parts of your library to a bibtex file.\n:::\n\n- The last set of options I am going to specify in my YAML section of the document is that for the code that I am going to include that I want to be executed, I want to not have the underlying code show up in the final document (echo: false), if there are any warnings that show up to not show them in the final document (warnings: false), and if the code has any messages for those to also not show up in the final document (messages: false). I am then going to close the YAML section with the three dashed lines. The indentation of the lines matters! An indentation let's me know that I am specifying an option for the above setting.\n\nNow, let's start writing our document. What I like to be my very first thing after the YAML section is to set up everything for R by creating an R coding block. In this section I usually load my packages, datasets, etc. To create a coding block, you should let Quarto know what it's processing. So you do this with three of these \\`, and then close the code block with three of these \\`. When you start the coding block, you should also specify that the code is R code. The other thing you should do is label the code block. This will be helpful later for when you are generating tables and figures, *but* it is also helpful so that if, when compiling, there is an issue, then you know which chunk of code has the problem. Here is an example of a common setup block for me.\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: setup-block\n# Modularly load functions \nbox::use(\n    modelsummary = modelsummary[datasummary_skim],\n    ggplot2 = ggplot2[ggplot, geom_histogram, aes, theme_minimal, labs]\n)\n# Create empty list object for datasets\npenguins_list <- list()\n# Load my dataset\npenguins_list[['original']] <- palmerpenguins::penguins\n```\n````\n:::\n\n\nNow, what I can do is write my introduction, literature review, and theory sections. \n\n```{.markdown}\n# Introduction\n\nPenguins are cute, adorable creatures, and are misunderstood.\n\n# Literature review\n\n@doe_2022 said, \"Penguins are cute.\"\n```\n\nWhenever you want to reference something in Quarto, you can simply use the @ symbol. In the instance above, I am referencing a citation that is stored as doe_2022 in my .bib file. To start a new section, I can use the pound (hashtag, if you are a youngster) symbol. If I want to create a sub-section, I can do a double pound symbol. And surprise, if I want to create a sub-sub-section, I can do a triple pound symbol.\n\nI will then include the text beneath the section. I do not need to indent the text as Quarto will do it for me when it compiles the document.\n\nNow, I have gotten to the data section of my paper. I will need to start doing some analyses. \n\n\n::: {#tbl-descriptive-statistics .cell tbl-cap='Descriptive statistics'}\n\n```{.r .cell-code}\npenguins_list[['original']] |>\n    datasummary_skim(notes = 'Data source: Palmer Penguins')\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table style=\"NAborder-bottom: 0; width: auto !important; margin-left: auto; margin-right: auto;\" class=\"table\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> Unique (#) </th>\n   <th style=\"text-align:right;\"> Missing (%) </th>\n   <th style=\"text-align:right;\"> Mean </th>\n   <th style=\"text-align:right;\"> SD </th>\n   <th style=\"text-align:right;\"> Min </th>\n   <th style=\"text-align:right;\"> Median </th>\n   <th style=\"text-align:right;\"> Max </th>\n   <th style=\"text-align:right;\">    </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> bill_length_mm </td>\n   <td style=\"text-align:right;\"> 165 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 43.9 </td>\n   <td style=\"text-align:right;\"> 5.5 </td>\n   <td style=\"text-align:right;\"> 32.1 </td>\n   <td style=\"text-align:right;\"> 44.5 </td>\n   <td style=\"text-align:right;\"> 59.6 </td>\n   <td style=\"text-align:right;\">  <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"svglite\" width=\"48.00pt\" height=\"12.00pt\" viewBox=\"0 0 48.00 12.00\"><defs><style type=\"text/css\">\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n    .svglite text {\n      white-space: pre;\n    }\n  </style></defs><rect width=\"100%\" height=\"100%\" style=\"stroke: none; fill: none;\"></rect><defs><clipPath id=\"cpMC4wMHw0OC4wMHwwLjAwfDEyLjAw\"><rect x=\"0.00\" y=\"0.00\" width=\"48.00\" height=\"12.00\"></rect></clipPath></defs><g clip-path=\"url(#cpMC4wMHw0OC4wMHwwLjAwfDEyLjAw)\">\n</g><defs><clipPath id=\"cpMC4wMHw0OC4wMHwyLjg4fDEyLjAw\"><rect x=\"0.00\" y=\"2.88\" width=\"48.00\" height=\"9.12\"></rect></clipPath></defs><g clip-path=\"url(#cpMC4wMHw0OC4wMHwyLjg4fDEyLjAw)\"><rect x=\"1.62\" y=\"10.86\" width=\"3.23\" height=\"0.80\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"4.85\" y=\"7.24\" width=\"3.23\" height=\"4.42\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"8.08\" y=\"4.42\" width=\"3.23\" height=\"7.24\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"11.31\" y=\"4.02\" width=\"3.23\" height=\"7.64\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"14.55\" y=\"3.82\" width=\"3.23\" height=\"7.84\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"17.78\" y=\"5.83\" width=\"3.23\" height=\"5.83\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"21.01\" y=\"4.02\" width=\"3.23\" height=\"7.64\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"24.24\" y=\"3.22\" width=\"3.23\" height=\"8.44\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"27.47\" y=\"3.22\" width=\"3.23\" height=\"8.44\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"30.71\" y=\"4.22\" width=\"3.23\" height=\"7.44\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"33.94\" y=\"10.05\" width=\"3.23\" height=\"1.61\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"37.17\" y=\"10.66\" width=\"3.23\" height=\"1.01\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"40.40\" y=\"11.46\" width=\"3.23\" height=\"0.20\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"43.64\" y=\"11.46\" width=\"3.23\" height=\"0.20\" style=\"stroke-width: 0.38; fill: #000000;\"></rect></g></svg>\n</td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> bill_depth_mm </td>\n   <td style=\"text-align:right;\"> 81 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 17.2 </td>\n   <td style=\"text-align:right;\"> 2.0 </td>\n   <td style=\"text-align:right;\"> 13.1 </td>\n   <td style=\"text-align:right;\"> 17.3 </td>\n   <td style=\"text-align:right;\"> 21.5 </td>\n   <td style=\"text-align:right;\">  <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"svglite\" width=\"48.00pt\" height=\"12.00pt\" viewBox=\"0 0 48.00 12.00\"><defs><style type=\"text/css\">\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n    .svglite text {\n      white-space: pre;\n    }\n  </style></defs><rect width=\"100%\" height=\"100%\" style=\"stroke: none; fill: none;\"></rect><defs><clipPath id=\"cpMC4wMHw0OC4wMHwwLjAwfDEyLjAw\"><rect x=\"0.00\" y=\"0.00\" width=\"48.00\" height=\"12.00\"></rect></clipPath></defs><g clip-path=\"url(#cpMC4wMHw0OC4wMHwwLjAwfDEyLjAw)\">\n</g><defs><clipPath id=\"cpMC4wMHw0OC4wMHwyLjg4fDEyLjAw\"><rect x=\"0.00\" y=\"2.88\" width=\"48.00\" height=\"9.12\"></rect></clipPath></defs><g clip-path=\"url(#cpMC4wMHw0OC4wMHwyLjg4fDEyLjAw)\"><rect x=\"1.25\" y=\"9.04\" width=\"5.29\" height=\"2.62\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"6.54\" y=\"6.30\" width=\"5.29\" height=\"5.36\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"11.83\" y=\"7.44\" width=\"5.29\" height=\"4.22\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"17.12\" y=\"6.53\" width=\"5.29\" height=\"5.14\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"22.41\" y=\"4.82\" width=\"5.29\" height=\"6.85\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"27.70\" y=\"3.22\" width=\"5.29\" height=\"8.44\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"32.99\" y=\"7.21\" width=\"5.29\" height=\"4.45\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"38.29\" y=\"10.41\" width=\"5.29\" height=\"1.26\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"43.58\" y=\"10.98\" width=\"5.29\" height=\"0.68\" style=\"stroke-width: 0.38; fill: #000000;\"></rect></g></svg>\n</td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> flipper_length_mm </td>\n   <td style=\"text-align:right;\"> 56 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 200.9 </td>\n   <td style=\"text-align:right;\"> 14.1 </td>\n   <td style=\"text-align:right;\"> 172.0 </td>\n   <td style=\"text-align:right;\"> 197.0 </td>\n   <td style=\"text-align:right;\"> 231.0 </td>\n   <td style=\"text-align:right;\">  <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"svglite\" width=\"48.00pt\" height=\"12.00pt\" viewBox=\"0 0 48.00 12.00\"><defs><style type=\"text/css\">\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n    .svglite text {\n      white-space: pre;\n    }\n  </style></defs><rect width=\"100%\" height=\"100%\" style=\"stroke: none; fill: none;\"></rect><defs><clipPath id=\"cpMC4wMHw0OC4wMHwwLjAwfDEyLjAw\"><rect x=\"0.00\" y=\"0.00\" width=\"48.00\" height=\"12.00\"></rect></clipPath></defs><g clip-path=\"url(#cpMC4wMHw0OC4wMHwwLjAwfDEyLjAw)\">\n</g><defs><clipPath id=\"cpMC4wMHw0OC4wMHwyLjg4fDEyLjAw\"><rect x=\"0.00\" y=\"2.88\" width=\"48.00\" height=\"9.12\"></rect></clipPath></defs><g clip-path=\"url(#cpMC4wMHw0OC4wMHwyLjg4fDEyLjAw)\"><rect x=\"0.27\" y=\"11.37\" width=\"3.77\" height=\"0.29\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"4.04\" y=\"10.06\" width=\"3.77\" height=\"1.60\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"7.80\" y=\"7.59\" width=\"3.77\" height=\"4.08\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"11.57\" y=\"3.22\" width=\"3.77\" height=\"8.44\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"15.34\" y=\"3.36\" width=\"3.77\" height=\"8.30\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"19.10\" y=\"6.13\" width=\"3.77\" height=\"5.53\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"22.87\" y=\"9.04\" width=\"3.77\" height=\"2.62\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"26.64\" y=\"7.29\" width=\"3.77\" height=\"4.37\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"30.40\" y=\"6.86\" width=\"3.77\" height=\"4.80\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"34.17\" y=\"7.00\" width=\"3.77\" height=\"4.66\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"37.94\" y=\"8.75\" width=\"3.77\" height=\"2.91\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"41.70\" y=\"9.62\" width=\"3.77\" height=\"2.04\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"45.47\" y=\"11.52\" width=\"3.77\" height=\"0.15\" style=\"stroke-width: 0.38; fill: #000000;\"></rect></g></svg>\n</td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> body_mass_g </td>\n   <td style=\"text-align:right;\"> 95 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 4201.8 </td>\n   <td style=\"text-align:right;\"> 802.0 </td>\n   <td style=\"text-align:right;\"> 2700.0 </td>\n   <td style=\"text-align:right;\"> 4050.0 </td>\n   <td style=\"text-align:right;\"> 6300.0 </td>\n   <td style=\"text-align:right;\">  <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"svglite\" width=\"48.00pt\" height=\"12.00pt\" viewBox=\"0 0 48.00 12.00\"><defs><style type=\"text/css\">\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n    .svglite text {\n      white-space: pre;\n    }\n  </style></defs><rect width=\"100%\" height=\"100%\" style=\"stroke: none; fill: none;\"></rect><defs><clipPath id=\"cpMC4wMHw0OC4wMHwwLjAwfDEyLjAw\"><rect x=\"0.00\" y=\"0.00\" width=\"48.00\" height=\"12.00\"></rect></clipPath></defs><g clip-path=\"url(#cpMC4wMHw0OC4wMHwwLjAwfDEyLjAw)\">\n</g><defs><clipPath id=\"cpMC4wMHw0OC4wMHwyLjg4fDEyLjAw\"><rect x=\"0.00\" y=\"2.88\" width=\"48.00\" height=\"9.12\"></rect></clipPath></defs><g clip-path=\"url(#cpMC4wMHw0OC4wMHwyLjg4fDEyLjAw)\"><rect x=\"-0.69\" y=\"10.65\" width=\"6.17\" height=\"1.01\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"5.48\" y=\"5.51\" width=\"6.17\" height=\"6.15\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"11.65\" y=\"3.22\" width=\"6.17\" height=\"8.44\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"17.83\" y=\"6.43\" width=\"6.17\" height=\"5.23\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"24.00\" y=\"6.71\" width=\"6.17\" height=\"4.96\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"30.17\" y=\"8.63\" width=\"6.17\" height=\"3.03\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"36.35\" y=\"9.28\" width=\"6.17\" height=\"2.39\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"42.52\" y=\"11.48\" width=\"6.17\" height=\"0.18\" style=\"stroke-width: 0.38; fill: #000000;\"></rect></g></svg>\n</td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> year </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 2008.0 </td>\n   <td style=\"text-align:right;\"> 0.8 </td>\n   <td style=\"text-align:right;\"> 2007.0 </td>\n   <td style=\"text-align:right;\"> 2008.0 </td>\n   <td style=\"text-align:right;\"> 2009.0 </td>\n   <td style=\"text-align:right;\">  <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" class=\"svglite\" width=\"48.00pt\" height=\"12.00pt\" viewBox=\"0 0 48.00 12.00\"><defs><style type=\"text/css\">\n    .svglite line, .svglite polyline, .svglite polygon, .svglite path, .svglite rect, .svglite circle {\n      fill: none;\n      stroke: #000000;\n      stroke-linecap: round;\n      stroke-linejoin: round;\n      stroke-miterlimit: 10.00;\n    }\n    .svglite text {\n      white-space: pre;\n    }\n  </style></defs><rect width=\"100%\" height=\"100%\" style=\"stroke: none; fill: none;\"></rect><defs><clipPath id=\"cpMC4wMHw0OC4wMHwwLjAwfDEyLjAw\"><rect x=\"0.00\" y=\"0.00\" width=\"48.00\" height=\"12.00\"></rect></clipPath></defs><g clip-path=\"url(#cpMC4wMHw0OC4wMHwwLjAwfDEyLjAw)\">\n</g><defs><clipPath id=\"cpMC4wMHw0OC4wMHwyLjg4fDEyLjAw\"><rect x=\"0.00\" y=\"2.88\" width=\"48.00\" height=\"9.12\"></rect></clipPath></defs><g clip-path=\"url(#cpMC4wMHw0OC4wMHwyLjg4fDEyLjAw)\"><rect x=\"1.78\" y=\"3.92\" width=\"4.44\" height=\"7.74\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"6.22\" y=\"11.66\" width=\"4.44\" height=\"0.00\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"10.67\" y=\"11.66\" width=\"4.44\" height=\"0.00\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"15.11\" y=\"11.66\" width=\"4.44\" height=\"0.00\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"19.56\" y=\"3.64\" width=\"4.44\" height=\"8.02\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"24.00\" y=\"11.66\" width=\"4.44\" height=\"0.00\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"28.44\" y=\"11.66\" width=\"4.44\" height=\"0.00\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"32.89\" y=\"11.66\" width=\"4.44\" height=\"0.00\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"37.33\" y=\"11.66\" width=\"4.44\" height=\"0.00\" style=\"stroke-width: 0.38; fill: #000000;\"></rect><rect x=\"41.78\" y=\"3.22\" width=\"4.44\" height=\"8.44\" style=\"stroke-width: 0.38; fill: #000000;\"></rect></g></svg>\n</td>\n  </tr>\n</tbody>\n<tfoot><tr><td style=\"padding: 0; \" colspan=\"100%\">\n<sup></sup> Data source: Palmer Penguins</td></tr></tfoot>\n</table>\n\n`````\n:::\n:::\n\n\nIn the previous code block, I label the codeblock, but since I am also generating a table, I am also labeling the output of the codeblock as well. Since I am going to be generating a table, I am going to specify this in the label by using the tbl prefix. I also want to provide a caption for the table I am creating and will do this by specifying the option tbl-cap. \n\nNow what I can do, is I can reference this table, @tbl-descriptive-statistics, easily by simply using the @ symbol; the universal symbol for references.\n\nAnother awesome thing that I can do is run in-line code which allows me to discuss the results I have from a computation. For example, @tbl-descriptive-statistics demonstrates that the average bill length, in millimeters, is ``43.92``. Here is this same sentence:\n\n``` include\nFor example, @tbl-descriptive-statistics demonstrates that the average bill length, in millimeters, is ```{{r}} sprintf('%.2f', mean(penguins_list[['original']]$bill_length_mm, na.rm = TRUE))```.\n```\n\nIn the above sentence I referenced my table *and* I was also able to include the result of a computation into my writing by using an in-line code block. This opens a ton of doors in terms of allowing my writing to adjust to the results of a computation. You can get really creative here - I've even done it for discussing my using if-else statements.\n\nI can also create and display a figure!\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins_list[['original']] |>\n    ggplot() +\n    geom_histogram(aes(x = bill_length_mm), fill = '#eb6864', alpha = 0.3) +\n    theme_minimal() + \n    labs(x = 'Bill length (in mm)', y = 'Density', caption = 'Data source: Palmer Penguins')\n```\n\n::: {.cell-output-display}\n![Distribution of Bill length](quarto_basics_index_files/figure-html/fig-histogram-1.png){#fig-histogram width=672}\n:::\n:::\n\n\nI can reference the figure, @fig-histogram, again by using the @ symbol.\n\n```{.markdown}\n@fig-histogram shows...\n```\n\n# Presentations with Quarto\n\nOkay, so say that I wrote a draft of my manuscript (or report) and am going to need to present it to folks. What changes? Honestly, not much. The bulk of what changes happens in the YAML section.\n\nThere are a few options in terms of outputs for your presentation. My favorite is to use RevealJS. How it works is it essentially converts your Quarto document to Javascript and then converts that into a pretty HTML document. You can then open your presentation with a web browser (such as Chrome). The nice thing about RevealJS rather than specifying a Powerpoint or Beamer (PDF) option, is that the presentation includes more interactivity and it is a much more dynamic document. \n\nHere's what a standard YAML section for a presentation of mine looks like.\n\n```{.yaml}\n---\ntitle: \"Title of research project\"\nauthor:\n    - Author 1\n    - Author 2\nformat:\n    revealjs:\n        self-contained: true\n        theme: serif\n        incremental: true\n        scrollable: true\n        slide-number: true\n        toc: true\n        toc-depth: 1\n        slide-level: 3\n        code-overflow: wrap\nbibliography: project_bibliography_file.bib\n---\n```\n\nAs you might be able to tell, the main thing that changes is in the format option. \n\n- I specify that my output is going to be a revealjs document (which automatically is converted to HTML). \n\n- I also specify the theme of the presentation - I find serif to be one that looks nice and has a number of nice properties such as a readable font.\n\n- I also specify that I want incremental to be true. This allows me to not show all of my bullet points on a given slide all at once. \n\n- I also specify that I want scrollable to be true. If one of my slides run long, the standard behavior is to just cut off the text that runs past the borders of the slide. However, I can change this by setting scrollable to true so that I can scroll through my slide and can display text that may be cut off otherwise. \n\n- I additionally include a table of contents (toc) as I often like to walk through the different milestones of a presentation I am doing. I specify the toc-depth so that not everything in my slides will be considered one of those milestones. The 1 refers to the section level. I'll elaborate on what this means in a little bit. \n\n- I may want my slides to be broken up as sub-sub-sections rather than as sections or as sub-sections and so I specify the slide level as three. This means that whenever I want a new slide, I can just specify a new sub-sub-section. Again, I'll explain this a bit more in a second.\n\n- I sometimes include my code in a slide (say its for teaching undergraduates in my methods classes) and I want the code to wrap if a given line is too long. I also specify where my bibtex file is as well so that I can include any references in my presentation as well.\n\nAfter I have specified the YAML section, I will start to construct my slides. As I mentioned before, my slides are defined by specifying a new sub-sub-section rather than a new section. However, I use a new section as a way to identify a milestone in my presentation. So here is what my slides often look like under the hood:\n\n\n    # Motivation for the project\n\n    ### Research Question\n\n    - I wonder why some penguins have longer bills than others.\n\n    ### Motivation for the project\n\n    - I once watched *Happy Feet* and felt that some penguins would probably have an advantage with a longer bill than the others, so long as it wasn't too long.\n\n    ### What we (collectively) know already\n\n    - Bills are useful tools for a variety of species.\n\n    ### What is the puzzle\n\n    - While we know that bills are useful, I am not sure we understand what explains the variation in the bill length. \n        - NOTE: All of this is just a silly example that I am writing while I'm waiting for some of my Monte Carlo simulations to run.\n\n    # My expectations\n\n    - Blah blah blah\n\n    ### What I argue\n\n    - Blah blah blah\n\n    ### Justify my argument\n\n    - Blah blah blah\n\n    ### My hypotheses\n\n    - Blah blah blah\n\n    # Evidence\n\n    ### Data\n    - I use the Palmer Penguins dataset to examine heterogeneity in bill length.\n\n    ### Methods\n\n    - I am going to first establish that there is some degree of heterogeneity in bill length.\n\n\n    ### Results\n\n```{{r}}\n#| label: fig-presentation-histogram\n#| fig-cap: Distribution of Bill length\npenguins_list[['original']] |>\n    ggplot() +\n    geom_histogram(aes(x = bill_length_mm), fill = '#eb6864', alpha = 0.3) +\n    theme_minimal() + \n    labs(x = 'Bill length (in mm)', y = 'Density', caption = 'Data source: Palmer Penguins')\n```\n\n    :::{.notes}\n    - Here is a histogram demonstrating that there is some heterogeneity!\n    :::\n\n    # Concluding thoughts\n\n    ### Conclusions\n\n    ### Contact\n\n\nThere is a lot in here. But let me try to explain it all:\n\n- The # represents a milestone that will show up on my table of contents. So on my table of contents slide, it will list:\n    - Motivation for the project\n    - My expectations\n    - Evidence\n    - Concluding thoughts\n- My slides are identified by using three # symbols. \n    - Within my slides, I can list bullet points by using the dash symbol. If I want to nest a bullet point, I hit enter and then the tab button and then add a dash symbol. \n- The same way that I could execute R code to compile my PDF I can do that with a presentation as well!\n- The nice thing about RevealJS is that I can use a speaker view for my slides by hitting the S key once I've opened my presentation html file. With the speaker view, I can see the current slide that I am on, the next slide, the duration of my presentation, and I can also see any speaker notes I include.\n    - You'll notice that I added notes for myself on the Results slide by using three colons and curly brackets that enclose \".notes\". Within the notes block, I can add bullet points of things I want to make sure to mention on a particular slide. This is pretty awesome!\n\n# Closing up this long blog post\n\nAs Quarto is designed to be able to compile into a number of different formats and is extremely customizable, this allows for you to use Quarto for a whole smattering of documentation that you might need for a given project or for a job. This makes it a wonderful tool to learn and to sink some time into to learn.\n\nAlso, as you might tell from the ability to run in-line code blocks and your ability to execute and report on your analyses all in one document, this is a huge step-forward in the replication crisis. No more are the days that authors write a manuscript, submit it to a journal, then once accepted change all of the R scripts. It makes sure that authors are thinking about the reproducibility of their code while they are writing it. Sweet.\n\nThere is tons more to cover about Quarto and its different uses that you can [find on their main website](www.quarto.org). Also, if you'd like to see examples of these things all in action, you're welcome to look at these github repositories of mine which include the code along with the resulting output. I will note that for the example of a manuscript, I am using [Andrew Heiss' fancy template](https://github.com/andrewheiss/hikmah-academic-quarto) so this'll look a bit different than the default stuff I covered in this post.\n\n- Manuscript (PDF) example: [Elite norms and mass polarization pre-analysis plan draft](https://github.com/DamonCharlesRoberts/elite_norms_mass_polarization/tree/main/drafts)\n- Slides example: [Elite norms and mass polarization presentation](https://github.com/DamonCharlesRoberts/elite_norms_mass_polarization/tree/main/slides)\n",
    "supporting": [
      "quarto_basics_index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}